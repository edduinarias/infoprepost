---
- block: 
    - name: "[ Linux ] Extraer Version del Sistema"
      ansible.builtin.shell: cat /etc/os-release
      failed_when: false
      register: osversion
      when: 
        - ansible_facts['os_family'] in ['Redhat','Debian', 'Suse', 'AlmaLinux', 'RedHat' ]
        - ansible_facts['distribution_major_version'] != '5'
      
    - name: "[ Linux ] Guardar Variable Fact de Version del sistema"
      set_fact:
         osversion_content: "{{ osversion.stdout + '\n' + ansible_facts['distribution'] + '\n' + ansible_facts['distribution_version'] + '\n' + ansible_facts['kernel']}}" 
      when: osversion is defined and osversion.stdout is defined
      
    - name: "[ Linux - Espcial ] Extraer Version del Sistema"
      ansible.builtin.shell: cat /etc/redhat-release
      failed_when: false
      register: osversion
      when: 
        - ansible_facts['os_family'] == 'RedHat' 
        - ansible_facts['distribution_major_version'] == '5'
    
    - name: "[ Linux - Espcial ] Guardar Variable Fact de Version del sistema"
      set_fact:
          osversion_content: "{{ osversion.stdout + '\n' + ansible_facts['distribution'] + '\n' + ansible_facts['distribution_version'] + '\n' + ansible_facts['kernel']}}" 
      when: 
        - osversion is defined and osversion.stdout is defined
        - ansible_facts['os_family'] == 'RedHat'
        - ansible_facts['distribution_major_version'] == '5'

    - name: "[ Solaris ] Extraer Version del Sistema"
      ansible.builtin.shell: pkg info entire
      failed_when: false
      register: osversion
      when: 
        - ansible_facts['os_family'] == 'Solaris' 

    - name: "[ Solaris ] Guardar Variable Fact de Version del sistema"
      set_fact:
          osversion_content: "{{ osversion.stdout + '\n' + ansible_facts['distribution'] + '\n' + ansible_facts['distribution_version'] + '\n' + ansible_facts['kernel']}}" 
      when: osversion is defined and osversion.stdout is defined
      
    - name: "[ AIX ] Version del Sistema"
      ansible.builtin.shell: oslevel -s | awk '{ print "VERSO:"$1 }'
      failed_when: false
      register: osversion
      when: 
        - ansible_facts['os_family'] == 'AIX' 
    
    - name: "[ AIX ] Guardar Variable Fact de Version del sistema"
      set_fact:
          osversion_content: "{{ osversion.stdout + '\n' + ansible_facts['distribution'] + '\n' + ansible_facts['distribution_version'] + '\n' + ansible_facts['kernel']}}" 
      when: osversion is defined and osversion.stdout is defined

  when: inventory_hostname != "bastion.local.com"
  tags:
    - primera
    - segunda

- name: "[ Ejecucion: 1 ] Crear reporte inicial de la Version del Sistema"
  delegate_to: bastion.local.com
  ansible.builtin.copy:
    content: "{{ osversion_content }}"
    dest: "{{ dest_infoprepos }}/{{ cambio }}/reporte_inicial/osversion_{{ inventory_hostname }}"
    mode: '0644'
  tags:
    - primera

- name: "[ Ejecucion: 2 ] Crear reporte final de la Version del Sistema"
  delegate_to: bastion.local.com
  ansible.builtin.copy: 
    content: "{{ osversion_content }}"  
    dest: "{{ dest_infoprepos }}/{{ cambio }}/reporte_final/osversion_{{ inventory_hostname }}"
  tags:
    - segunda

- name: "[ Ejecucion: 2] Crear comparativo de la Version del Sistema"
  delegate_to: bastion.local.com
  ansible.builtin.shell: >
        diff -u "{{ dest_infoprepos }}/{{ cambio }}/reporte_inicial/osversion_{{ inventory_hostname }}" "{{ dest_infoprepos }}/{{ cambio }}/reporte_final/osversion_{{ inventory_hostname }}" > "{{ dest_infoprepos }}/{{ cambio }}/diff/osversion_{{ inventory_hostname }}.diff" || true
  when:
    - inventory_hostname != "bastion.local.com"
  tags:
    - segunda
